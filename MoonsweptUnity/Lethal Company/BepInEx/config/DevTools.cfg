## Settings file was created by plugin DevTools v1.1.1
## Plugin GUID: DevTools

[DevTools Menu]

## Add DevTools Menu to quick menu.
# Setting type: Boolean
# Default value: true
Add menu = true

[Execute.ToggleTestRoom]

## Toggles the testing level from the debug menu.
## Requires Patch.IsEditor to be active for this to work.
## 
## Should be ran on OnEvent.PlayerSpawn or later.
# Setting type: Boolean
# Default value: true
Patch = true

[Patch.InfiniteCredits]

## Credits get always set to 100 000 000.
# Setting type: Boolean
# Default value: true
Patch = true

[Patch.InfiniteShotgunAmmo]

## Skips the check for ammo when using the shotgun.
# Setting type: Boolean
# Default value: true
Patch = true

[Patch.InfiniteSprint]

## Patches the game to allow infinite sprinting by always setting SprintMeter to full.
# Setting type: Boolean
# Default value: true
Patch = true

[Patch.IsEditor]

## Patches the game to think it is running in Unity Editor, allowing us to use the in-game debug menu.
# Setting type: Boolean
# Default value: true
Patch = true

[Patch.MovementCheat]

## Allows jumping at any moment and by performing a double jump, the movement will become much
## faster and a lot more responsive, and running will also increase jump height and gravity.
## Note: This completely overrides PlayerControllerB's Jump_performed() method.
# Setting type: Boolean
# Default value: true
Patch = true

[Patch.OnDeathHeal]

## Instead of dying, set health to full instead.
## 
## This helps with testing taking damage from your enemy, without death being a concern.
# Setting type: Boolean
# Default value: true
Patch = true

[Patch.SkipSpawnPlayerAnimation]

## Skips the spawn player animation so you can start moving and looking around as soon as you spawn.
# Setting type: Boolean
# Default value: true
Patch = true

[Tools.GiveItemToSelf]

## Will find item by name, and give it to your inventory.
## If name is invalid, prints all valid item names to console.
# Setting type: String
# Default value: 
itemName = 

[Tools.SpawnEnemyInFrontOfSelf]

## Will find the enemy by name, and spawn it.
## If name is invalid, prints all valid enemy names to console.
# Setting type: String
# Default value: 
enemyName = 

[Tools.TeleportSelf]

## Teleports you to the location specified in the test level.
## 
## Valid values are: TeleportLocation.Inside = 1, TeleportLocation.Outside = 2
# Setting type: Int32
# Default value: 0
location = 0

